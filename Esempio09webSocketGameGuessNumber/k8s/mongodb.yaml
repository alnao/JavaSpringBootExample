apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
  namespace: guessgame
type: Opaque
data:
  # Base64 encoded: admin
  username: YWRtaW4=
  # Base64 encoded: password123
  password: cGFzc3dvcmQxMjM=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: guessgame
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: guessgame
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: password
        - name: MONGO_INITDB_DATABASE
          value: "guessgame"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: init-script
        configMap:
          name: mongodb-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: guessgame
data:
  init-mongo.js: |
    // MongoDB initialization script
    db = db.getSiblingDB('guessgame');

    // Create collections
    db.createCollection('players');
    db.createCollection('match_log');

    // Create indexes for better performance
    db.players.createIndex({ "nickname": 1 }, { unique: true, sparse: true });
    db.players.createIndex({ "active": 1 });
    db.players.createIndex({ "score": -1 });
    db.players.createIndex({ "lastActivity": 1 });

    db.match_log.createIndex({ "timestamp": -1 });
    db.match_log.createIndex({ "event": 1 });
    db.match_log.createIndex({ "connectionId": 1 });

    print('Database initialized successfully');
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: guessgame
  labels:
    app: mongodb
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb
