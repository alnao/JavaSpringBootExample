apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: aws-j-es03-eks-argocd #ex spring-boot-app
  namespace: argocd # Importante: l'Application risiede nel namespace di Argo CD
spec:
  project: default
  source:
    repoURL: https://github.com/alnao/JavaSpringBootExample.git # L'URL del tuo repository Git
    targetRevision: master # Il branch che vuoi monitorare (o 'main')
    path: Esempio03dbDockerAWS/backend-springboot/helm-charts/spring-boot-app # Il percorso al tuo Helm Chart all'interno del repository
    helm:
      valueFiles:
        - values.yaml
      # Puoi anche passare valori specifici se necessario
      # parameters:
      #   - name: "image.tag"
      #     value: "1.1.0"
  destination:
    server: https://kubernetes.default.svc # L'URL del tuo cluster Kubernetes interno
    namespace: default # Il namespace su EKS dove deployare il microservizio
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true # Crea il namespace di destinazione se non esiste